"use strict";(self.webpackChunkeclipse_tractusx_github_io=self.webpackChunkeclipse_tractusx_github_io||[]).push([[36633],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(n),m=i,h=c["".concat(s,".").concat(m)]||c[m]||d[m]||o;return n?a.createElement(h,r(r({ref:t},u),{},{components:n})):a.createElement(h,r({ref:t},u))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,r=new Array(o);r[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:i,r[1]=l;for(var p=2;p<o;p++)r[p]=n[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},99051:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=n(87462),i=(n(67294),n(3905));const o={id:"Operation View",title:"Operation View",description:"Business Partner Kit",sidebar_position:3},r=void 0,l={unversionedId:"kits/Business Partner Kit/Operation View",id:"kits/Business Partner Kit/Operation View",title:"Operation View",description:"Business Partner Kit",source:"@site/docs-kits/kits/Business Partner Kit/page_software-operation-view.md",sourceDirName:"kits/Business Partner Kit",slug:"/kits/Business Partner Kit/Operation View",permalink:"/docs-kits/next/kits/Business Partner Kit/Operation View",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"Operation View",title:"Operation View",description:"Business Partner Kit",sidebar_position:3},sidebar:"kits",previous:{title:"Adoption View",permalink:"/docs-kits/next/kits/Business Partner Kit/Adoption View"},next:{title:"Documentation",permalink:"/docs-kits/next/category/documentation"}},s={},p=[{value:"Business Partner Kit",id:"business-partner-kit",level:3},{value:"Installation Instructions",id:"installation-instructions",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"BPDM",id:"bpdm",level:2},{value:"Image Tag",id:"image-tag",level:3},{value:"Helm Dependencies",id:"helm-dependencies",level:3},{value:"Deploy Individual Service",id:"deploy-individual-service",level:2},{value:"1. BPDM Pool",id:"1-bpdm-pool",level:3},{value:"Image Tag",id:"image-tag-1",level:4},{value:"Profiles",id:"profiles",level:4},{value:"Ingress",id:"ingress",level:4},{value:"Pool Configuration",id:"pool-configuration",level:4},{value:"Helm Dependencies",id:"helm-dependencies-1",level:4},{value:"2. BPDM Gate",id:"2-bpdm-gate",level:3},{value:"Image Tag",id:"image-tag-2",level:4},{value:"Profiles",id:"profiles-1",level:4},{value:"Ingress",id:"ingress-1",level:4},{value:"Gate Configuration",id:"gate-configuration",level:4},{value:"3. BPDM Bridge Dummy",id:"3-bpdm-bridge-dummy",level:3},{value:"Image Tag",id:"image-tag-3",level:4},{value:"Profiles",id:"profiles-2",level:4},{value:"Ingress",id:"ingress-2",level:4},{value:"Bridge Dummy Configuration",id:"bridge-dummy-configuration",level:4}],u={toc:p};function c(e){let{components:t,...o}=e;return(0,i.kt)("wrapper",(0,a.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Business partner kit banner",src:n(20140).Z,width:"285",height:"244"})),(0,i.kt)("h3",{id:"business-partner-kit"},"Business Partner Kit"),(0,i.kt)("h2",{id:"installation-instructions"},"Installation Instructions"),(0,i.kt)("p",null,"This file contains information on how to configure and run the BPDM applications using helm chart."),(0,i.kt)("p",null,"BPDM project is SpringBoot Kotlin software project managed by Maven.\nThe indivial services from project can be run with the following command: ",(0,i.kt)("inlineCode",{parentName:"p"},"mvn clean spring-boot:run")," on local system. This section covering on how you can deploy whole bpdm project and on how you can deploy each service Individual from the project."),(0,i.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://kubernetes.io/"},"Kubernetes Cluster")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://helm.sh/docs/"},"Helm")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/eclipse-tractusx/bpdm"},"Cloned BPDM repository"))),(0,i.kt)("h2",{id:"bpdm"},"BPDM"),(0,i.kt)("p",null,"In an existing Kubernetes cluster the application can be deployed with the following command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"helm install release_name ./charts/bpdm --namespace your_namespace\n")),(0,i.kt)("p",null,"This will install a new release of the BPDM in the given namespace.\nOn default values this release deploys the latest image tagged as ",(0,i.kt)("inlineCode",{parentName:"p"},"main")," from the repository's GitHub Container Registry.\nThe application is run on default profile without authorization.\nAdditionally, the Helm deployment contains a PostgreSQL database and Opensearch instance which the BPDM Pool connects to."),(0,i.kt)("p",null,"On the default values deployment no further action is needed to make the BPDM deployment run.\nHowever, per default, ingress as well as authentication for endpoints are disabled."),(0,i.kt)("p",null,"By giving your own values file you can configure the Helm deployment of the BPDM freely:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"helm install release_name ./charts/bpdm --namespace your_namespace -f ./path/to/your/values.yaml\n")),(0,i.kt)("p",null,"In the following sections you can have a look at the most important configuration options."),(0,i.kt)("h3",{id:"image-tag"},"Image Tag"),(0,i.kt)("p",null,"Per default, the Helm deployment references a certain BPDM release version where the newest Helm release points to the newest version.\nThis is a stable tag pointing to a fixed release version of the BPDM.\nFor your deployment you might want to follow the latest application releases instead."),(0,i.kt)("p",null,"In your values file you can overwrite the default tag:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'image:\n  tag: "latest"\n')),(0,i.kt)("h3",{id:"helm-dependencies"},"Helm Dependencies"),(0,i.kt)("p",null,"On default, the Helm deployment also contains a PostgreSQL and Opensearch deployment.\nYou can configure these deployments in your value file as well.\nFor this, consider the documentation of the correspondent dependency ",(0,i.kt)("a",{parentName:"p",href:"https://artifacthub.io/packages/helm/bitnami/postgresql/11.9.13"},"PostgreSQL"),"\nor ",(0,i.kt)("a",{parentName:"p",href:"https://opensearch.org/docs/latest/dashboards/install/helm/"},"Opensearch"),".\nIn case you want to use an already deployed database or Opensearch instance you can also disable the respective dependency and overwrite the default host\naddress in the ",(0,i.kt)("inlineCode",{parentName:"p"},"applicationConfig"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"applicationConfig:\n  spring:\n    datasource:\n      url: jdbc:postgresql://remote.host.net:5432/bpdm\npostgres:\n  enabled: false\n")),(0,i.kt)("h2",{id:"deploy-individual-service"},"Deploy Individual Service"),(0,i.kt)("h3",{id:"1-bpdm-pool"},"1. BPDM Pool"),(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"#prerequisites"},"prerequisites")," for running this service. In an existing Kubernetes cluster the application can be deployed with the following command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"helm install release_name ./charts/bpdm-pool --namespace your_namespace\n")),(0,i.kt)("p",null,"This will install a new release of the BPDM Pool in the given namespace.\nOn default values this release deploys the latest image tagged as ",(0,i.kt)("inlineCode",{parentName:"p"},"main")," from the repository's GitHub Container Registry.\nThe application is run on default profile (without authorization).\nAdditionally, the Helm deployment contains a PostgreSQL database and Opensearch instance which the BPDM Pool connects to."),(0,i.kt)("p",null,"On the default values deployment no further action is needed to make the BPDM Pool deployment run.\nHowever, per default, ingress as well as authentication for endpoints are disabled."),(0,i.kt)("p",null,"By giving your own values file you can configure the Helm deployment of the BPDM Pool freely:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"helm install release_name ./charts/bpdm-pool --namespace your_namespace -f ./path/to/your/values.yaml\n")),(0,i.kt)("p",null,"In the following sections you can have a look at the most important configuration options."),(0,i.kt)("h4",{id:"image-tag-1"},"Image Tag"),(0,i.kt)("p",null,"Per default, the Helm deployment references a certain BPDM Pool release version where the newest Helm release points to the newest Pool version.\nThis is a stable tag pointing to a fixed release version of the BPDM Pool.\nFor your deployment you might want to follow the latest application releases instead."),(0,i.kt)("p",null,"In your values file you can overwrite the default tag:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'image:\n  tag: "latest"\n')),(0,i.kt)("h4",{id:"profiles"},"Profiles"),(0,i.kt)("p",null,"You can also activate Spring profiles in which the BPDM Pool should be run.\nIn case you want to run the Pool with authorization enabled you can write the following:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"springProfiles:\n  - auth\n")),(0,i.kt)("h4",{id:"ingress"},"Ingress"),(0,i.kt)("p",null,"You can specify your own ingress configuration for the Helm deployment to make the BPDM Pool available over Ingress.\nNote that you need to have the appropriate Ingress controller installed in your cluster first.\nFor example, consider a Kubernetes cluster with an ",(0,i.kt)("a",{parentName:"p",href:"https://kubernetes.github.io/ingress-nginx/"},"Ingress-Nginx")," installed.\nAn Ingress configuration for the Pool deployment could look like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'ingress:\n  enabled: true\n  annotations:\n    kubernetes.io/ingress.class: nginx\n    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"\n  hosts:\n    - host: business-partners.your-domain.net\n      paths:\n        - path: /pool\n          pathType: Prefix\n')),(0,i.kt)("h4",{id:"pool-configuration"},"Pool Configuration"),(0,i.kt)("p",null,"The Helm deployment comes with the ability to configure the BPDM Pool application directly over the values file.\nThis way you are able to overwrite any configuration property of the ",(0,i.kt)("inlineCode",{parentName:"p"},"application.properties")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"application-auth.properties")," files.\nConsider that you would need to turn on ",(0,i.kt)("inlineCode",{parentName:"p"},"auth"),"  profile first before overwriting any property in the corresponding properties file could take effect.\nOverwriting configuration properties can be useful to connect to a remote service:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"applicationConfig:\n  bpdm:\n    security:\n      auth-server-url: https://remote.keycloak.domain.com\n      realm: CUSTOM_REALM\n      client-id: POOL_CLIENT\n")),(0,i.kt)("p",null,"In this example above a Pool with authenticated activated connects to a remote Keycloak instance and uses its custom realm and resource."),(0,i.kt)("p",null,'Entries in the "applicationConfig" value are written directly to a configMap that is part of the Helm deployment.\nThis can be a problem if you want to overwrite configuration properties with secrets.\nTherefore, you can specify secret configuration values in a different Helm value ',(0,i.kt)("inlineCode",{parentName:"p"},"applicationSecrets"),".\nContent of this value is written in a Kubernetes secret instead.\nIf you want to specify a custom database password for example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"applicationSecrets:\n  spring:\n    datasource:\n      password: your_database_secret\n")),(0,i.kt)("h4",{id:"helm-dependencies-1"},"Helm Dependencies"),(0,i.kt)("p",null,"On default, the Helm deployment also contains a PostgreSQL and Opensearch deployment.\nYou can configure these deployments in your value file as well.\nFor this, consider the documentation of the correspondent dependency ",(0,i.kt)("a",{parentName:"p",href:"https://artifacthub.io/packages/helm/bitnami/postgresql/11.9.13"},"PostgreSQL"),"\nor ",(0,i.kt)("a",{parentName:"p",href:"https://opensearch.org/docs/latest/dashboards/install/helm/"},"Opensearch"),".\nIn case you want to use an already deployed database or Opensearch instance you can also disable the respective dependency and overwrite the default host\naddress in the ",(0,i.kt)("inlineCode",{parentName:"p"},"applicationConfig"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"applicationConfig:\n  spring:\n    datasource:\n      url: jdbc:postgresql://remote.host.net:5432/bpdm\npostgres:\n  enabled: false\n")),(0,i.kt)("h3",{id:"2-bpdm-gate"},"2. BPDM Gate"),(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"#prerequisites"},"prerequisites")," for running this service is same except this service need running BPDM Pool instance."),(0,i.kt)("p",null,"In an existing Kubernetes cluster the application can be deployed with the following command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"helm install release_name ./charts/bpdm-gate --namespace your_namespace -f /path/to/my_release-values.yaml\n")),(0,i.kt)("p",null,"This will install a new release of the BPDM Gate in the given namespace.\nOn default values this release deploys the latest image tagged as ",(0,i.kt)("inlineCode",{parentName:"p"},"main")," from the repository's GitHub Container Registry.\nThe application is run on default profile (without authorization for its own endpoints or BPDM Pool endpoints).\nThis deployment requires a BPDM Pool deployment to be reachable under host name ",(0,i.kt)("inlineCode",{parentName:"p"},"bpdm-pool")," on port ",(0,i.kt)("inlineCode",{parentName:"p"},"8080"),"."),(0,i.kt)("p",null,"By giving your own values file you can configure the Helm deployment of the BPDM Gate freely.\nIn the following sections you can have a look at the most important configuration options."),(0,i.kt)("h4",{id:"image-tag-2"},"Image Tag"),(0,i.kt)("p",null,"Per default, the Helm deployment references the latest BPDM gate release tagged as ",(0,i.kt)("inlineCode",{parentName:"p"},"main"),".\nThis tag follows the latest version of the Gate and contains the newest features and bug fixes.\nYou might want to switch to a more stable release tag instead for your deployment.\nIn your values file you can overwrite the default tag:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'image:\n  tag: "latest"\n')),(0,i.kt)("h4",{id:"profiles-1"},"Profiles"),(0,i.kt)("p",null,"You can also activate Spring profiles in which the BPDM Gate should be run.\nIn case you want to run the Gate with authorization and oAuth Pool client enabled you can write the following:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"springProfiles:\n  - auth\n  - pool-auth\n")),(0,i.kt)("h4",{id:"ingress-1"},"Ingress"),(0,i.kt)("p",null,"You can specify your own ingress configuration for the Helm deployment to make the BPDM Gate available over Ingress.\nNote that you need to have the appropriate Ingress controller installed in your cluster first.\nFor example, consider a Kubernetes cluster with an ",(0,i.kt)("a",{parentName:"p",href:"https://kubernetes.github.io/ingress-nginx/"},"Ingress-Nginx")," installed.\nAn Ingress configuration for the Gate deployment could look like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'ingress:\n  enabled: true\n  annotations:\n    kubernetes.io/ingress.class: nginx\n    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"\n  hosts:\n    - host: business-partners.your-domain.net\n      paths:\n        - path: /companies/test-company\n          pathType: Prefix\n')),(0,i.kt)("h4",{id:"gate-configuration"},"Gate Configuration"),(0,i.kt)("p",null,"For the default deployment you already need to overwrite the configuration properties of the application.\nThe Helm deployment comes with the ability to configure the BPDM Gate application directly over the values file.\nThis way you are able to overwrite any configuration property of the ",(0,i.kt)("inlineCode",{parentName:"p"},"application.properties"),",  ",(0,i.kt)("inlineCode",{parentName:"p"},"application-auth.properties"),"\nand  ",(0,i.kt)("inlineCode",{parentName:"p"},"application-pool-auth.properties")," files.\nConsider that you would need to turn on ",(0,i.kt)("inlineCode",{parentName:"p"},"auth")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"pool-auth")," profile first before overwriting any property in the corresponding properties file could take\neffect.\nOverwriting configuration properties can be useful for connecting to a remotely hosted BPDM Pool instance:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"applicationConfig:\n  bpdm:\n    pool:\n      base-url: http://remote.domain.net/api/catena\n")),(0,i.kt)("p",null,'Entries in the "applicationConfig" value are written directly to a configMap that is part of the Helm deployment.\nThis can be a problem if you want to overwrite configuration properties with secrets.\nTherefore, you can specify secret configuration values in a different Helm value ',(0,i.kt)("inlineCode",{parentName:"p"},"applicationSecrets"),".\nContent of this value is written in a Kubernetes secret instead.\nIf you want to specify a keycloak client secret for example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"applicationSecrets:\n  bpdm:\n    security:\n      credentials:\n        secret: your_client_secret\n")),(0,i.kt)("h3",{id:"3-bpdm-bridge-dummy"},"3. BPDM Bridge Dummy"),(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"#prerequisites"},"prerequisites")," for running this service is same. In an existing Kubernetes cluster the application can be deployed with the following command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"helm install release_name ./charts/bpdm-bridge-dummy --namespace your_namespace -f /path/to/my_release-values.yaml\n")),(0,i.kt)("p",null,"This will install a new release of the BPDM Bridge Dummy in the given namespace.\nOn default values this release deploys the latest image tagged as ",(0,i.kt)("inlineCode",{parentName:"p"},"main")," from the repository's GitHub Container Registry."),(0,i.kt)("p",null,"By giving your own values file you can configure the Helm deployment of the BPDM Bridge Dummy freely.\nIn the following sections you can have a look at the most important configuration options."),(0,i.kt)("h4",{id:"image-tag-3"},"Image Tag"),(0,i.kt)("p",null,"Per default, the Helm deployment references the latest BPDM Bridge Dummy release tagged as ",(0,i.kt)("inlineCode",{parentName:"p"},"main"),".\nThis tag follows the latest version of the Bridge Dummy and contains the newest features and bug fixes.\nYou might want to switch to a more stable release tag instead for your deployment.\nIn your values file you can overwrite the default tag:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'image:\n  tag: "latest"\n')),(0,i.kt)("h4",{id:"profiles-2"},"Profiles"),(0,i.kt)("p",null,"You can also activate Spring profiles in which the BPDM Bridge Dummy should be run.\nIn case you want to run the Bridge Dummy with authorization enabled you can write the following:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"springProfiles:\n  - auth\n")),(0,i.kt)("h4",{id:"ingress-2"},"Ingress"),(0,i.kt)("p",null,"You can specify your own ingress configuration for the Helm deployment to make the BPDM Bridge Dummy available over Ingress.\nNote that you need to have the appropriate Ingress controller installed in your cluster first.\nFor example, consider a Kubernetes cluster with an ",(0,i.kt)("a",{parentName:"p",href:"https://kubernetes.github.io/ingress-nginx/"},"Ingress-Nginx")," installed.\nAn Ingress configuration for the Bridge Dummy deployment could somehow look like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'ingress:\n  enabled: true\n  annotations:\n    kubernetes.io/ingress.class: nginx\n    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"\n  hosts:\n    - host: business-partners.your-domain.net\n      paths:\n        - path: /bridge\n          pathType: Prefix\n')),(0,i.kt)("h4",{id:"bridge-dummy-configuration"},"Bridge Dummy Configuration"),(0,i.kt)("p",null,"For the default deployment you already need to overwrite the configuration properties of the application.\nThe Helm deployment comes with the ability to configure the BPDM Bridge Dummy application directly over the values file.\nThis way you are able to overwrite any configuration property of the ",(0,i.kt)("inlineCode",{parentName:"p"},"application.properties")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"application-auth.properties")," files.\nConsider that you would need to turn on ",(0,i.kt)("inlineCode",{parentName:"p"},"auth")," profile first before overwriting any property in the corresponding properties file could take\neffect.\nOverwriting configuration properties can be useful for connecting to a remotely hosted BPDM Gate and Pool instance:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"applicationConfig:\n  bpdm:\n    pool:\n      base-url: http://remote.domain.net/api/catena\n    gate:\n      base-url: http://remote.domain.net/api/catena\n")),(0,i.kt)("p",null,'Entries in the "applicationConfig" value are written directly to a configMap that is part of the Helm deployment.\nThis can be a problem if you want to overwrite configuration properties with secrets.\nTherefore, you can specify secret configuration values in a different Helm value ',(0,i.kt)("inlineCode",{parentName:"p"},"applicationSecrets"),".\nContent of this value is written in a Kubernetes secret instead.\nIf you want to specify a keycloak client secret for example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"applicationSecrets:\n  bpdm:\n    security:\n      credentials:\n        secret: your_client_secret\n")))}c.isMDXComponent=!0},20140:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/BPKitIcon-55e920e08d5706764626858aebe41780.png"}}]);