"use strict";(self.webpackChunkeclipse_tractusx_github_io=self.webpackChunkeclipse_tractusx_github_io||[]).push([[3636],{16961:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>f,contentTitle:()=>u,default:()=>k,frontMatter:()=>c,metadata:()=>y,toc:()=>x});var a=i(87462),l=(i(67294),i(3905)),n=i(26389),p=i(94891),o=i(75190),s=i(47507),m=i(24310),d=i(63303),r=(i(75035),i(85162));const c={id:"update-policy-definition",title:"updatePolicyDefinition",description:"Updates an existing Policy, If the Policy is not found, an error is reported",sidebar_label:"updatePolicyDefinition",hide_title:!0,hide_table_of_contents:!0,api:{description:"Updates an existing Policy, If the Policy is not found, an error is reported",operationId:"updatePolicyDefinition",parameters:[{in:"path",name:"id",required:!0,schema:{type:"string",example:null}}],requestBody:{content:{"application/json":{schema:{type:"object",example:null,properties:{policy:{type:"object",additionalProperties:{type:"object",example:null,properties:{valueType:{type:"string",enum:["ARRAY","OBJECT","STRING","NUMBER","TRUE","FALSE","NULL"],example:null}},title:"JsonValue"},example:null,properties:{empty:{type:"boolean",example:null},valueType:{type:"string",enum:["ARRAY","OBJECT","STRING","NUMBER","TRUE","FALSE","NULL"],example:null}}}},required:["policy"],title:"PolicyDefinitionNewUpdateDto"}}}},responses:{200:{description:"policy definition was updated successfully. Returns the Policy Definition Id and updated timestamp"},400:{content:{"application/json":{schema:{type:"array",example:null,items:{type:"object",example:null,properties:{invalidValue:{type:"string",example:null},message:{type:"string",example:null},path:{type:"string",example:null},type:{type:"string",example:null}},title:"ApiErrorDetail"}}}},description:"Request body was malformed"},404:{content:{"application/json":{schema:{type:"object",example:null,properties:{invalidValue:{type:"string",example:null},message:{type:"string",example:null},path:{type:"string",example:null},type:{type:"string",example:null}},title:"ApiErrorDetail"}}},description:"policy definition could not be updated, because it does not exists"}},tags:["Policy Definition"],method:"put",path:"/v2/policydefinitions/{id}",jsonRequestBodyExample:null,info:{title:"EDC Policy Definition API",description:null,version:"0.0.1-SNAPSHOT"},postman:{name:"update Policy Definition",description:{content:"Updates an existing Policy, If the Policy is not found, an error is reported",type:"text/plain"},url:{path:["v2","policydefinitions",":id"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) ",type:"text/plain"},type:"any",value:"",key:"id"}]},header:[{key:"Content-Type",value:"application/json"},{key:"Accept",value:"application/json"}],method:"PUT",body:{mode:"raw",raw:'""',options:{raw:{language:"json"}}}}},sidebar_class_name:"put api-method",info_path:"./docs/kits/tractusx-edc/docs/kit/development-view/openAPI/management-api/policy-definition-api/edc-policy-definition-api",custom_edit_url:null},u=void 0,y={unversionedId:"kits/tractusx-edc/docs/kit/development-view/openAPI/management-api/policy-definition-api/update-policy-definition",id:"kits/tractusx-edc/docs/kit/development-view/openAPI/management-api/policy-definition-api/update-policy-definition",title:"updatePolicyDefinition",description:"Updates an existing Policy, If the Policy is not found, an error is reported",source:"@site/docs/kits/tractusx-edc/docs/kit/development-view/openAPI/management-api/policy-definition-api/update-policy-definition.api.mdx",sourceDirName:"kits/tractusx-edc/docs/kit/development-view/openAPI/management-api/policy-definition-api",slug:"/kits/tractusx-edc/docs/kit/development-view/openAPI/management-api/policy-definition-api/update-policy-definition",permalink:"/docs/kits/tractusx-edc/docs/kit/development-view/openAPI/management-api/policy-definition-api/update-policy-definition",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"update-policy-definition",title:"updatePolicyDefinition",description:"Updates an existing Policy, If the Policy is not found, an error is reported",sidebar_label:"updatePolicyDefinition",hide_title:!0,hide_table_of_contents:!0,api:{description:"Updates an existing Policy, If the Policy is not found, an error is reported",operationId:"updatePolicyDefinition",parameters:[{in:"path",name:"id",required:!0,schema:{type:"string",example:null}}],requestBody:{content:{"application/json":{schema:{type:"object",example:null,properties:{policy:{type:"object",additionalProperties:{type:"object",example:null,properties:{valueType:{type:"string",enum:["ARRAY","OBJECT","STRING","NUMBER","TRUE","FALSE","NULL"],example:null}},title:"JsonValue"},example:null,properties:{empty:{type:"boolean",example:null},valueType:{type:"string",enum:["ARRAY","OBJECT","STRING","NUMBER","TRUE","FALSE","NULL"],example:null}}}},required:["policy"],title:"PolicyDefinitionNewUpdateDto"}}}},responses:{200:{description:"policy definition was updated successfully. Returns the Policy Definition Id and updated timestamp"},400:{content:{"application/json":{schema:{type:"array",example:null,items:{type:"object",example:null,properties:{invalidValue:{type:"string",example:null},message:{type:"string",example:null},path:{type:"string",example:null},type:{type:"string",example:null}},title:"ApiErrorDetail"}}}},description:"Request body was malformed"},404:{content:{"application/json":{schema:{type:"object",example:null,properties:{invalidValue:{type:"string",example:null},message:{type:"string",example:null},path:{type:"string",example:null},type:{type:"string",example:null}},title:"ApiErrorDetail"}}},description:"policy definition could not be updated, because it does not exists"}},tags:["Policy Definition"],method:"put",path:"/v2/policydefinitions/{id}",jsonRequestBodyExample:null,info:{title:"EDC Policy Definition API",description:null,version:"0.0.1-SNAPSHOT"},postman:{name:"update Policy Definition",description:{content:"Updates an existing Policy, If the Policy is not found, an error is reported",type:"text/plain"},url:{path:["v2","policydefinitions",":id"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) ",type:"text/plain"},type:"any",value:"",key:"id"}]},header:[{key:"Content-Type",value:"application/json"},{key:"Accept",value:"application/json"}],method:"PUT",body:{mode:"raw",raw:'""',options:{raw:{language:"json"}}}}},sidebar_class_name:"put api-method",info_path:"./docs/kits/tractusx-edc/docs/kit/development-view/openAPI/management-api/policy-definition-api/edc-policy-definition-api",custom_edit_url:null},sidebar:"kits",previous:{title:"queryPolicyDefinitions",permalink:"/docs/kits/tractusx-edc/docs/kit/development-view/openAPI/management-api/policy-definition-api/query-policy-definitions"},next:{title:"updatePolicy",permalink:"/docs/kits/tractusx-edc/docs/kit/development-view/openAPI/management-api/policy-definition-api/update-policy"}},f={},x=[{value:"updatePolicyDefinition",id:"updatepolicydefinition",level:2}],g={toc:x};function k(e){let{components:t,...i}=e;return(0,l.kt)("wrapper",(0,a.Z)({},g,i,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"updatepolicydefinition"},"updatePolicyDefinition"),(0,l.kt)("p",null,"Updates an existing Policy, If the Policy is not found, an error is reported"),(0,l.kt)("details",{style:{marginBottom:"1rem"},"data-collapsed":!1,open:!0},(0,l.kt)("summary",{style:{}},(0,l.kt)("strong",null,"Path Parameters")),(0,l.kt)("div",null,(0,l.kt)("ul",null,(0,l.kt)(o.Z,{className:"paramsItem",param:{in:"path",name:"id",required:!0,schema:{type:"string",example:null}},mdxType:"ParamsItem"})))),(0,l.kt)(p.Z,{mdxType:"MimeTabs"},(0,l.kt)(r.Z,{label:"application/json",value:"application/json-schema",mdxType:"TabItem"},(0,l.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,l.kt)("summary",{style:{textAlign:"left"}},(0,l.kt)("strong",null,"Request Body")),(0,l.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,l.kt)("ul",{style:{marginLeft:"1rem"}},(0,l.kt)(m.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,l.kt)("details",{style:{}},(0,l.kt)("summary",{style:{}},(0,l.kt)("strong",null,"policy"),(0,l.kt)("span",{style:{opacity:"0.6"}}," object"),(0,l.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," required")),(0,l.kt)("div",{style:{marginLeft:"1rem"}},(0,l.kt)(m.Z,{collapsible:!1,name:"empty",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{type:"boolean",example:null},mdxType:"SchemaItem"}),(0,l.kt)(m.Z,{collapsible:!1,name:"valueType",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** [`ARRAY`, `OBJECT`, `STRING`, `NUMBER`, `TRUE`, `FALSE`, `NULL`]",schema:{type:"string",enum:["ARRAY","OBJECT","STRING","NUMBER","TRUE","FALSE","NULL"],example:null},mdxType:"SchemaItem"}),(0,l.kt)(m.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,l.kt)("details",{style:{}},(0,l.kt)("summary",{style:{}},(0,l.kt)("strong",null,"property name*"),(0,l.kt)("span",{style:{opacity:"0.6"}}," object (JsonValue)")),(0,l.kt)("div",{style:{marginLeft:"1rem"}},(0,l.kt)(m.Z,{collapsible:!1,name:"valueType",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** [`ARRAY`, `OBJECT`, `STRING`, `NUMBER`, `TRUE`, `FALSE`, `NULL`]",schema:{type:"string",enum:["ARRAY","OBJECT","STRING","NUMBER","TRUE","FALSE","NULL"],example:null},mdxType:"SchemaItem"}))))))))))),(0,l.kt)("div",null,(0,l.kt)(n.Z,{mdxType:"ApiTabs"},(0,l.kt)(r.Z,{label:"200",value:"200",mdxType:"TabItem"},(0,l.kt)("div",null,(0,l.kt)("p",null,"policy definition was updated successfully. Returns the Policy Definition Id and updated timestamp")),(0,l.kt)("div",null)),(0,l.kt)(r.Z,{label:"400",value:"400",mdxType:"TabItem"},(0,l.kt)("div",null,(0,l.kt)("p",null,"Request body was malformed")),(0,l.kt)("div",null,(0,l.kt)(p.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,l.kt)(r.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,l.kt)(d.Z,{mdxType:"SchemaTabs"},(0,l.kt)(r.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,l.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,l.kt)("summary",{style:{textAlign:"left"}},(0,l.kt)("strong",null,"Schema")),(0,l.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,l.kt)("ul",{style:{marginLeft:"1rem"}},(0,l.kt)("li",null,(0,l.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,l.kt)(m.Z,{collapsible:!1,name:"invalidValue",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:null},mdxType:"SchemaItem"}),(0,l.kt)(m.Z,{collapsible:!1,name:"message",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:null},mdxType:"SchemaItem"}),(0,l.kt)(m.Z,{collapsible:!1,name:"path",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:null},mdxType:"SchemaItem"}),(0,l.kt)(m.Z,{collapsible:!1,name:"type",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:null},mdxType:"SchemaItem"}),(0,l.kt)("li",null,(0,l.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]"))))),(0,l.kt)(r.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,l.kt)(s.Z,{responseExample:"null",language:"json",mdxType:"ResponseSamples"}))))))),(0,l.kt)(r.Z,{label:"404",value:"404",mdxType:"TabItem"},(0,l.kt)("div",null,(0,l.kt)("p",null,"policy definition could not be updated, because it does not exists")),(0,l.kt)("div",null,(0,l.kt)(p.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,l.kt)(r.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,l.kt)(d.Z,{mdxType:"SchemaTabs"},(0,l.kt)(r.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,l.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,l.kt)("summary",{style:{textAlign:"left"}},(0,l.kt)("strong",null,"Schema")),(0,l.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,l.kt)("ul",{style:{marginLeft:"1rem"}},(0,l.kt)(m.Z,{collapsible:!1,name:"invalidValue",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:null},mdxType:"SchemaItem"}),(0,l.kt)(m.Z,{collapsible:!1,name:"message",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:null},mdxType:"SchemaItem"}),(0,l.kt)(m.Z,{collapsible:!1,name:"path",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:null},mdxType:"SchemaItem"}),(0,l.kt)(m.Z,{collapsible:!1,name:"type",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:null},mdxType:"SchemaItem"})))),(0,l.kt)(r.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,l.kt)(s.Z,{responseExample:"null",language:"json",mdxType:"ResponseSamples"}))))))))))}k.isMDXComponent=!0}}]);